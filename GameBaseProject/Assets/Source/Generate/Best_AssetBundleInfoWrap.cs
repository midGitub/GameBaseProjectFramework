//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Best_AssetBundleInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Best.AssetBundleInfo), typeof(System.Object));
		L.RegFunction("AddDependency", AddDependency);
		L.RegFunction("Release", Release);
		L.RegFunction("DisposeImmediate", DisposeImmediate);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("DisposeSelf", DisposeSelf);
		L.RegFunction("New", _CreateBest_AssetBundleInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ABID", get_ABID, set_ABID);
		L.RegVar("OnUnloadedEvent", get_OnUnloadedEvent, set_OnUnloadedEvent);
		L.RegVar("bundle", get_bundle, set_bundle);
		L.RegVar("bundleName", get_bundleName, set_bundleName);
		L.RegVar("data", get_data, set_data);
		L.RegVar("ResourcesObj", get_ResourcesObj, set_ResourcesObj);
		L.RegVar("BundleLoader", get_BundleLoader, set_BundleLoader);
		L.RegVar("ABParams", get_ABParams, set_ABParams);
		L.RegVar("assetInMemoryType", get_assetInMemoryType, set_assetInMemoryType);
		L.RegVar("GoPath", get_GoPath, null);
		L.RegVar("GoType", get_GoType, null);
		L.RegVar("mainObject", get_mainObject, null);
		L.RegFunction("OnUnloadedHandler", Best_AssetBundleInfo_OnUnloadedHandler);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateBest_AssetBundleInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Best.AssetBundleInfo obj = new Best.AssetBundleInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Best.AssetBundleInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDependency(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)ToLua.CheckObject(L, 1, typeof(Best.AssetBundleInfo));
			Best.AssetBundleInfo arg0 = (Best.AssetBundleInfo)ToLua.CheckObject(L, 2, typeof(Best.AssetBundleInfo));
			obj.AddDependency(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)ToLua.CheckObject(L, 1, typeof(Best.AssetBundleInfo));
			Best.AssetType arg0 = (Best.AssetType)ToLua.CheckObject(L, 2, typeof(Best.AssetType));
			obj.Release(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeImmediate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)ToLua.CheckObject(L, 1, typeof(Best.AssetBundleInfo));
			obj.DisposeImmediate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)ToLua.CheckObject(L, 1, typeof(Best.AssetBundleInfo));
			Best.AssetType arg0 = (Best.AssetType)ToLua.CheckObject(L, 2, typeof(Best.AssetType));
			obj.Dispose(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeSelf(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)ToLua.CheckObject(L, 1, typeof(Best.AssetBundleInfo));
			obj.DisposeSelf();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ABID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			int ret = obj.ABID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ABID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnUnloadedEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleInfo.OnUnloadedHandler ret = obj.OnUnloadedEvent;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnUnloadedEvent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			UnityEngine.AssetBundle ret = obj.bundle;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bundle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			string ret = obj.bundleName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bundleName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleData ret = obj.data;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index data on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourcesObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			UnityEngine.Object ret = obj.ResourcesObj;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResourcesObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BundleLoader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleLoader ret = obj.BundleLoader;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BundleLoader on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ABParams(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			AssetBundleParams ret = obj.ABParams;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ABParams on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetInMemoryType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			AssetInMemoryType ret = obj.assetInMemoryType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index assetInMemoryType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GoPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			string ret = obj.GoPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GoPath on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GoType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			System.Type ret = obj.GoType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GoType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mainObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			UnityEngine.Object ret = obj.mainObject;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mainObject on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ABID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ABID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ABID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnUnloadedEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleInfo.OnUnloadedHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Best.AssetBundleInfo.OnUnloadedHandler)ToLua.CheckObject(L, 2, typeof(Best.AssetBundleInfo.OnUnloadedHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Best.AssetBundleInfo.OnUnloadedHandler), func) as Best.AssetBundleInfo.OnUnloadedHandler;
			}

			obj.OnUnloadedEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnUnloadedEvent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.AssetBundle));
			obj.bundle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bundle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.bundleName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bundleName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleData arg0 = (Best.AssetBundleData)ToLua.CheckObject(L, 2, typeof(Best.AssetBundleData));
			obj.data = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index data on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResourcesObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Object));
			obj.ResourcesObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResourcesObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BundleLoader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			Best.AssetBundleLoader arg0 = (Best.AssetBundleLoader)ToLua.CheckObject(L, 2, typeof(Best.AssetBundleLoader));
			obj.BundleLoader = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BundleLoader on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ABParams(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			AssetBundleParams arg0 = (AssetBundleParams)ToLua.CheckObject(L, 2, typeof(AssetBundleParams));
			obj.ABParams = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ABParams on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetInMemoryType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.AssetBundleInfo obj = (Best.AssetBundleInfo)o;
			AssetInMemoryType arg0 = (AssetInMemoryType)ToLua.CheckObject(L, 2, typeof(AssetInMemoryType));
			obj.assetInMemoryType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index assetInMemoryType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Best_AssetBundleInfo_OnUnloadedHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Best.AssetBundleInfo.OnUnloadedHandler), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Best.AssetBundleInfo.OnUnloadedHandler), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

