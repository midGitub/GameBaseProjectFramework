//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Best_LuaDestroyBundleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Best.LuaDestroyBundle), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Out", Out);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("s_dict", get_s_dict, set_s_dict);
		L.RegVar("strName", get_strName, set_strName);
		L.RegVar("ResType", get_ResType, set_ResType);
		L.RegVar("BundleName", get_BundleName, set_BundleName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Out(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Best.LuaDestroyBundle.Out();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_dict(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Best.LuaDestroyBundle.s_dict);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			string ret = obj.strName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			System.Type ret = obj.ResType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			string ret = obj.BundleName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BundleName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_dict(IntPtr L)
	{
		try
		{
			System.Collections.Generic.Dictionary<string,int> arg0 = (System.Collections.Generic.Dictionary<string,int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,int>));
			Best.LuaDestroyBundle.s_dict = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.strName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			System.Type arg0 = (System.Type)ToLua.CheckObject(L, 2, typeof(System.Type));
			obj.ResType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Best.LuaDestroyBundle obj = (Best.LuaDestroyBundle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.BundleName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BundleName on a nil value" : e.Message);
		}
	}
}

